from kivy.lang import Builder
from kivymd.app import MDApp
from kivymd.uix.screen import MDScreen
from kivy.core.window import Window
from kivy.animation import Animation
from werkzeug.security import generate_password_hash, check_password_hash
from kivymd.toast import toast
import string, os, random
from email.message import EmailMessage
import ssl, smtplib
from kivy.uix.screenmanager import ScreenManager, Screen
users = {}

class MainApp(MDApp):
    def build(self):
        self.theme_cls.theme_style = "Dark"
        self.theme_cls.primary_palette = "BlueGray"
        return Builder.load_file('main.kv')

    def loginScreen(self):
        self.root.ids.login_button.md_bg_color = "green"
        self.root.ids.signUp_button.md_bg_color = "red"
        self.root.ids.welcome_label.text = "Login"
        self.root.ids.username_label.text = "Username"
        self.root.ids.username_input.hint_text = "Username"
        self.root.ids.password_label.text = "Password"
        self.root.ids.Password_input.hint_text = "Password"
        self.root.ids.Password_input.icon_right = "eye-off"
        self.root.ids.Password_input.password = True
        self.toggle_button(self.root.ids.forgotPassword_button, True)
        self.root.ids.rememberMe_checkBox.disabled = False
        self.root.ids.rememberMe_label.disabled = False

    def signupScreen(self):
        self.root.ids.login_button.md_bg_color = "red"
        self.root.ids.signUp_button.md_bg_color = "green"
        self.root.ids.welcome_label.text = "Sign Up"
        self.root.ids.username_label.text = "Full Name"
        self.root.ids.username_input.hint_text = "Full Name"
        self.root.ids.password_label.text = "Email"
        self.root.ids.Password_input.hint_text = "Email"
        self.root.ids.Password_input.icon_right = "email"
        self.root.ids.Password_input.password = False
        self.toggle_button(self.root.ids.forgotPassword_button, False)
        self.root.ids.rememberMe_checkBox.disabled = True
        self.root.ids.rememberMe_label.disabled = True

    def forgotPasswordScreen(self):
        self.root.ids.welcome_label.text = "Forgot Password"
        self.root.ids.password_label.text = "Email"
        self.root.ids.Password_input.hint_text = "Email"
        self.root.ids.Password_input.icon_right = "email"
        self.root.ids.Password_input.password = False
        self.toggle_button(self.root.ids.forgotPassword_button, False)
        self.root.ids.rememberMe_checkBox.disabled = True
        self.root.ids.rememberMe_label.disabled = True

    def check_input(self):
        self.verifyCode = random.randint(1000,9999)
        self.username = self.root.ids.username_input.text
        self.password = self.root.ids.Password_input.text
        user = users.get(self.username)
        
        if not self.username or all(char in string.whitespace + string.punctuation for char in self.username):
            self.show_notification()

        elif not self.password:
            self.show_notification()
        
        elif (self.root.ids.welcome_label.text == "Login"):
            if user and check_password_hash(user['password'], self.password):
                self.root.ids.welcome_label.text = "Welcome"
            else:
                self.show_notification()

        elif (self.root.ids.welcome_label.text == "Sign Up"):
            if user is None or not check_password_hash(user.get('username'), self.username):
                self.root.ids.welcome_label.text = "Created an account"
                self.sendEmail()

        elif (self.root.ids.welcome_label.text == "Forgot Password"):
            if user and check_password_hash(user.get('username'), self.username):
                self.root.ids.welcome_label.text = "Created a new Password"
                

        self.clear()

    def show_notification(self):
        toast('Sorry, Somthing has gone wrong')

    def toggle_button(self, button, enable):
        if enable:
            Animation(opacity=1, duration=0.5).start(button)
            button.disabled = False
        else:
            Animation(opacity=0, duration=0.5).start(button)
            button.disabled = True

    def sendEmail(self):
        email_sender = "illindependent867@gmail.com"
        email_password = "hmpa zbyh eclf dirz"
        email_receiver = self.password

        subject = "Conferm your email"
        body = f"""
                Dear {self.username}, 
                \n\t Welcome to Greenville Unitarian universalist fellowship or (GUUF). We wanted to send you an email to officially welcome you to the GUUF IT department, and it associated application.
                \t\n What you will have the ability to axis on this app: 
                \t\n - Blackmagic ATEM Software Control Manul
                \t\n - XSplit Manul
                \t\n - YouTube Manul
                \t\n - PoswerPoint Manul
                \t\n - Password manager
                \t\n - Messaging softwere
                \t\n - Calender
                \t\n - script maker
                \t\n welcome to GUUF IT department: {self.verifyCode}
                """
        email = EmailMessage()
        email["From"] = email_sender
        email["To"] = email_receiver
        email["Subject"] = subject
        email.set_content(body)
        context = ssl.create_default_context()
        with smtplib.SMTP_SSL('smtp.gmail.com', 465, context = context) as smtp:
            smtp.login(email_sender, email_password)
            smtp.sendmail(email_sender, email_receiver, email.as_string())

    def clear(self):
        self.root.ids.username_input.text = ""
        self.root.ids.Password_input.text = ""

if __name__ == '__main__':
    Window.size = (360, 640)
    Window.fullscreen = 'auto'
    MainApp().run()
