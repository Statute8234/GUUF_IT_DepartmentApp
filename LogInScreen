from kivy.lang import Builder
from kivymd.app import MDApp
from kivy.uix.screenmanager import ScreenManager, Screen, RiseInTransition
from kivy.core.window import Window
from kivymd.toast import toast
from kivymd.uix.filemanager import MDFileManager
from kivymd.icon_definitions import md_icons
from kivymd.uix.list import OneLineIconListItem
#--- 
import requests
import sqlite3
import os
import string
import re

# check email
def is_valid_email(email):
    pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    return re.match(pattern, email) is not None

# connect
def authenticate(username = "", email = "", password = "", full_name = ""):
    url = 'http://127.0.0.1:5000/authenticate'  # Replace with your server's IP address or domain

    data = {
        'username': username,
        'email': email,
        'password': password,
        'full_name': full_name
    }

    try:
        response = requests.post(url, json=data)

        if response.status_code == 200:
            result = response.json()
            if result.get('status') == 'success':
                return True
            else:
                return False
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        return False
    

class WindowManager(ScreenManager):
    pass

class LogInScreen(Screen):
    pass

class SignUpScreen(Screen):
    pass

class ForgotPasswordScreen(Screen):
    pass


class MainApp(MDApp):
    def build(self):
        self.theme_cls.theme_style = "Light"
        self.theme_cls.primary_palette = "BlueGray"
        self.WM = WindowManager()
        self.WM.add_widget(LogInScreen(name='LogInScreen'))
        self.WM.add_widget(SignUpScreen(name='SignUpScreen'))
        return Builder.load_file('main.kv')

    def on_start(self):
        self.icon = "channels4_profile-fotor-bg-remover-20240104154756.png"

    def check_input(self):
        current_screen = self.root.current
        if (current_screen == "LogInScreen"):
            self.LoginUsername_input = self.root.get_screen('LogInScreen').ids.username_input
            self.LoginPassword_input = self.root.get_screen('LogInScreen').ids.Password_input
            self.LoginUsername = self.LoginUsername_input.text
            self.LoginPassword = self.LoginPassword_input.text
            self.check_LogInScreen()

        if (current_screen == "ForgotPasswordScreen"):
            self.forgotUsername_input = self.root.get_screen('ForgotPasswordScreen').ids.username_input
            self.forgotEmail_input = self.root.get_screen('ForgotPasswordScreen').ids.email_input
            self.forgotUsername = self.forgotUsername_input.text
            self.forgotEmail = self.forgotEmail_input.text
            self.check_ForgotScreen()

        if (current_screen == "SignUpScreen"):
            self.SignupFullName_input = self.root.get_screen('SignUpScreen').ids.fullName_input
            self.SignupEmail_input = self.root.get_screen('SignUpScreen').ids.email_input
            self.SignupFullName = self.SignupFullName_input.text
            self.SignupEmail = self.SignupEmail_input.text
            self.check_SignUpScreen()

    def check_LogInScreen(self):
        serch = authenticate(username = self.LoginUsername, password = self.LoginPassword)
        if (len(self.LoginUsername) >= self.LoginUsername_input.max_text_length) or (len(self.LoginPassword) >= self.LoginPassword_input.max_text_length):
            self.show_notification(True)

        elif not self.LoginUsername or all(char in string.whitespace + string.punctuation for char in self.LoginUsername):
            self.show_notification(True)
        
        elif not self.LoginUsername:
            self.show_notification(True)

        elif not self.LoginPassword:
            self.show_notification(True)
        
        elif serch == False:
            self.show_notification(True)

        else:
            self.show_notification(False)
        self.clear_input()
    
    def check_ForgotScreen(self):
        serch = authenticate(username = self.forgotUsername, email = self.forgotEmail)
        if (len(self.forgotUsername) >= self.forgotUsername_input.max_text_length) or (len(self.forgotEmail) >= self.forgotEmail_input.max_text_length):
            self.show_notification(True)

        elif not self.forgotUsername  or all(char in string.whitespace + string.punctuation for char in self.forgotUsername):
            self.show_notification(True)
        
        elif not self.forgotUsername:
            self.show_notification(True)

        elif not(self.forgotEmail):
            self.show_notification(True)
        
        elif not(is_valid_email(self.forgotEmail)):
            self.show_notification(True)

        elif serch == False:
            self.show_notification(True)
        
        else:
            self.show_notification(False)
        self.clear_input()
    
    def check_SignUpScreen(self):
        serch = authenticate(email = self.SignupEmail, full_name = self.SignupFullName)
        if (len(self.SignupFullName) >= self.SignupFullName_input.max_text_length) or (len(self.SignupEmail) >= self.SignupEmail_input.max_text_length):
            self.show_notification(True)

        elif not self.SignupFullName:
            self.show_notification(True)

        elif not(self.SignupEmail):
            self.show_notification(True)

        elif not(is_valid_email(self.SignupEmail)):
            self.show_notification(True)

        elif serch:
            self.show_notification(True)
            
        else:
            self.show_notification(False)
        self.clear_input()

    def show_notification(self, check):
        if (check):
            toast('Sorry, Somthing has gone wrong')
        else:
            toast('Success')

    def clear_input(self):
        try:
            self.LoginUsername_input.text = ''
            self.LoginPassword_input.text = ''
        except AttributeError:
            pass

        try:
            self.forgotUsername_input.text = ''
            self.forgotEmail_input.text = ''
        except AttributeError:
            pass

        try:
            self.SignupFullName_input.text = ''
            self.SignupEmail_input.text = ''
        except AttributeError:
            pass


if __name__ == '__main__':
    Window.size = (360, 640)
    MainApp().run()
